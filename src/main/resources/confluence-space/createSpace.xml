<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<!-- Method Documentation URL:https://docs.atlassian.com/atlassian-confluence/REST/latest/#d3e453 -->
<template name="createSpace" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="key" description="The key of the space."/>
    <parameter name="name" description="The name of the space."/>
    <parameter name="descriptionValue" description="The description of the space."/>
    <parameter name="descriptionRepresentation"
               description="The representation of the description. E.g.plain"/>
    <sequence>
        <property name="uri.var.key" expression="$func:key"/>
        <property name="uri.var.name" expression="$func:name"/>
        <property name="uri.var.descriptionValue" expression="$func:descriptionValue"/>
        <property name="uri.var.descriptionRepresentation"
                  expression="$func:descriptionRepresentation"/>
        <script language="js">
            <![CDATA[
            var key = mc.getProperty('uri.var.key');
            var name = mc.getProperty('uri.var.name');
            var descriptionValue = mc.getProperty('uri.var.descriptionValue');
            var descriptionRepresentation = mc.getProperty('uri.var.descriptionRepresentation');
            var payload = {};
            var plain = {};
            var description = {};
            //Setting mandatory parameters to payload.
            payload.key = key;
            payload.name = name;
            //Setting optional parameters to payload.  
            if (descriptionValue != null && descriptionValue != ""){
               plain.value = descriptionValue;
            }
            if (descriptionRepresentation != null && descriptionRepresentation != ""){
               plain.representation = descriptionRepresentation;
            }
            for (var plainProp in plain) {
               if (plain.hasOwnProperty(plainProp)) {
                  description.plain = plain;
                  break;
               }
            } 
            for (var desc in description) {
               if (description.hasOwnProperty(desc)) {
                  payload.description = description;
                  break;
               }
            } 
            mc.setPayloadJSON(payload);
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="post" uri-template="{+uri.var.apiUrl}/space"/>
            </endpoint>
        </call>
        <!-- Remove custom headers from the API response -->
        <header name="Vary" action="remove" scope="transport"/>
        <header name="X-ASEN" action="remove" scope="transport"/>
        <header name="X-AUSERNAME" action="remove" scope="transport"/>
        <header name="X-Seraph-LoginReason" action="remove" scope="transport"/>
        <header name="X-Content-Type-Options" action="remove" scope="transport"/>
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="X-Frame-Options" action="remove" scope="transport"/>
        <header name="X-XSS-Protection" action="remove" scope="transport"/>
        <header name="X-Accel-Buffering" action="remove" scope="transport"/>
        <header name="Content-Security-Policy" action="remove" scope="transport"/>
    </sequence>
</template>